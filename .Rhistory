df <- read.csv("data/bookchamber_referat.csv")
temp <- df[1:1000,]
View(temp)
library(tidyr)
temp <- separate(temp, text, sep = ":", )
temp <- separate(temp, text, sep = ":", into = c("topic", "text"))
temp <- df[1:1000,]
temp <- separate(temp, text, sep = " : ", into = c("topic", "text"))
temp <- df[1:1000,]
temp <- separate(temp, text, sep = " : ", into = c("topic", "text", "more_text"))
temp <- df[1:1000,]
temp <- separate(temp, text, sep = " : ", into = c("topic",
"dissertation_info",
"text", "more_text"))
temp <- df[1:1000,]
temp <- separate(temp, text, sep = " : ", into = c("topic",
"dissertation_info",
"text"),
extra = "merge")
temp$dissertation_info[1]
substr(temp$dissertation_info[1],40,45)
substr(temp$dissertation_info[1],39,45)
substr(temp$dissertation_info[1],36,45)
substr(temp$dissertation_info[1],37,45)
substr(temp$dissertation_info[1],37,41)
substr(temp$dissertation_info[1],37,40)
df_full <- df
df <- df_full[1:1000,]
df$degree <- substr(df$dissertation_info,37,40)
df <- separate(df, text, sep = " : ", into = c("title",
"degree",
"text"),
extra = "merge")
df$degree <- substr(df$dissertation_info,37,40)
df <- separate(df, text, sep = " : ", into = c("title",
"degree",
"text"),
extra = "merge")
df$degree <- substr(df$dissertation_info,37,40)
substr(df$degree[1],41,46)
df <- df_full[1:1000,]
df <- separate(df, text, sep = " : ", into = c("title",
"degree",
"text"),
extra = "merge")
substr(df$degree[1],41,46)
substr(df$degree[1],43,47)
df$degree_field <- substr(df$degree,43,47)
df$degree <- substr(df$degree,37,40)
table(df$degree)
table(df$degree_fil)
table(df$degree_field)
df <- df_full[1:1000,]
df <- separate(df, text, sep = " : ", into = c("title",
"degree",
"text"),
extra = "merge")
df$degree_field <- substr(df$degree,41,47)
df$degree <- substr(df$degree,37,40)
table(df$degree_fil)
table(df$degree)
table(df$degree_field)
df <- df_full[1:1000,]
df <- separate(df, text, sep = " : ", into = c("title",
"degree",
"text"),
extra = "merge")
df$degree_field <- substr(df$degree,41,50)
table(df$degree_field)
df <- df_full[1:1000,]
df <- separate(df, text, sep = " : ", into = c("title",
"degree",
"text"),
extra = "merge")
df$degree_field <- substr(df$degree,41,53)
table(df$degree_field)
df <- df_full[1:1000,]
df <- separate(df, text, sep = " : ", into = c("title",
"degree",
"text"),
extra = "merge")
df$degree_field <- substr(df$degree,41,80)
table(df$degree_field)
df <- df_full
df <- separate(df, text, sep = " : ", into = c("title",
"degree",
"text"),
extra = "merge")
df$degree_field <- substr(df$degree,41,80)
df$degree <- substr(df$degree,37,40)
table(df$degree)
View(df)
library(rvest)
library(purrr)
library(data.table)
library(pbapply)
webpages <- list.files("website_pages/",full.names = T)
webpage_path <- webpages[49]
#webpages <- list.files("website_pages/",full.names = T)
webpage_path <- "AL0901_l.HTM"
webpage <- basename(webpage_path)
doc_year <- paste0(20, substr(webpage,3,4))
custom_html_nodes <- function(data, year) {
if (year > 2013) {
return(html_nodes(data,
xpath = '//*[contains(concat( " ", @class, " " ), concat( " ", "1", " " ))]'))
}
else if (year > 2009) {
return(html_nodes(data,
xpath = '//a//*[contains(concat( " ", @class, " " ), concat( " ", "1", " " ))]'))
}
#else if (year == 2009) {
#  return(html_nodes(data, css = ".a a"))}
else{
return(html_nodes(data,
css = '.a'))
}
}
nodes <- read_html(webpage_path, options = "HUGE") %>%
custom_html_nodes(.,doc_year) %>%
.[html_attr(., "style") == "text-align:justify;text-indent:.66cm"]
nodes[1]
authors <- nodes %>% html_node("b") %>% html_text()
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"./text()"))[1])
strings <- map_chr(nodes, ~ trimws(xml_text(xml_find_all(.x,"./text()")))[2])
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"text()"))[1])
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"/text()"))[1])
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"/text()")))
xml_child(nodes)
xml_text(xml_child(nodes))
custom_html_nodes <- function(data, year) {
if (year > 2013) {
return(html_nodes(data,
xpath = '//*[contains(concat( " ", @class, " " ), concat( " ", "1", " " ))]'))
}
else if (year > 2009) {
return(html_nodes(data,
xpath = '//a//*[contains(concat( " ", @class, " " ), concat( " ", "1", " " ))]'))
}
else if (year == 2009) {
return(html_nodes(data, css = ".p a"))}
else{
return(html_nodes(data,
css = '.a'))
}
}
nodes <- read_html(webpage_path, options = "HUGE") %>%
custom_html_nodes(.,doc_year) %>%
.[html_attr(., "style") == "text-align:justify;text-indent:.66cm"]
custom_html_nodes <- function(data, year) {
if (year > 2013) {
return(html_nodes(data,
xpath = '//*[contains(concat( " ", @class, " " ), concat( " ", "1", " " ))]'))
}
else if (year > 2009) {
return(html_nodes(data,
xpath = '//a//*[contains(concat( " ", @class, " " ), concat( " ", "1", " " ))]'))
}
#else if (year == 2009) {
#  return(html_nodes(data, css = ".a a"))}
else{
return(html_nodes(data,
css = '.a'))
}
}
nodes <- read_html(webpage_path, options = "HUGE") %>%
custom_html_nodes(.,doc_year) %>%
.[html_attr(., "style") == "text-align:justify;text-indent:.66cm"]
authors <- nodes %>% html_node("b") %>% html_text()
strings <- nodes %>% html_text()
strings[1]
strings[2]
strings <- nodes %>% html_text() %>% strsplit("\r\n")
strings <- nodes %>% html_text() %>% strsplit("\r\n") %>% unlist()
str(strings)
strings <- nodes %>% html_text() %>% strsplit("\r\n") %>% as.character()
strings[1]
strings <- nodes %>% html_text() %>% strsplit("\r\n") %>% as.vector()
strings[[1]]
authors <- nodes %>% html_node("b") %>% html_text()
authors
nodes <- read_html(webpage_path, options = "HUGE") %>%
custom_html_nodes(.,doc_year) %>%
.[html_attr(., "style") == "text-align:justify;text-indent:.66cm"]
nodes
authors <- nodes %>% html_node("b") %>% html_text()
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"./text()"))[1])
strings <- xml_text(xml_find_all(nodes,"./text()"))[1])
strings <- xml_text(xml_find_all(nodes,"./text()"))[1]
strings <- xml_text(xml_find_all(nodes,"./text()"))
nodes[1]
str(nodes[1])
as.character(nodes[1])
as.character(nodes[2])
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_first(.x,"./text()")))
lapply(nodes, html_text())
lapply(nodes, html_text)
strings <- map_chr(nodes, ~ xml_text(.x))
strings
strings <- unlist(lapply(nodes, xml_text)
}
else {
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"./text()"))[1])
strings <- map_chr(nodes, ~ trimws(xml_text(xml_find_all(.x,"./text()")))[2])
}
df <- data.frame(year = doc_year,
volume = substr(webpage,5,6),
number = doc_numbers,
author = authors,
text = strings,
stringsAsFactors = F)
print(webpage)
return(df)
}
custom_html_nodes <- function(data, year) {
if (year > 2013) {
return(html_nodes(data,
xpath = '//*[contains(concat( " ", @class, " " ), concat( " ", "1", " " ))]'))
}
else if (year > 2009) {
return(html_nodes(data,
xpath = '//a//*[contains(concat( " ", @class, " " ), concat( " ", "1", " " ))]'))
}
#else if (year == 2009) {
#  return(html_nodes(data, css = ".a a"))}
else{
return(html_nodes(data,
css = '.a'))
}
}
df_list <- pblapply(webpages, extract_data)
df <- rbindlist(df_list)
write.csv(df, "data/bookchamber_referat.csv", row.names = F)
strings <- unlist(lapply(nodes, xml_text))
strings
nodes <- read_html(webpage_path, options = "HUGE") %>%
html_nodes(css = '.a a') %>%
.[html_attr(., "style") == "text-align:justify;text-indent:.66cm"]
nodes <- read_html(webpage_path, options = "HUGE") %>%
html_nodes(css = '.a a')
nodes
nodes[1]
as.character(nodes[1])
nodes <- read_html(webpage_path, options = "HUGE")
xml_structure(nodes)
nodes <- read_xml(webpage_path, options = "HUGE") %>%
custom_html_nodes(.,doc_year) %>%
.[html_attr(., "style") == "text-align:justify;text-indent:.66cm"]
f <- scan(file = webpage_path,what = character())
f <- gsub('<input type="button" value="Заказать" onClick="writeinvArray()" />',
'</p>',f)
fileConn<-file(webpage_path)
writeLines(f, fileConn)
close(fileConn)
cat(f, file=webpage_path)
f <- scan(file = webpage_path,what = character())
f
f <- readChar(webpage_path, file.info(webpage_path)$size)
f
f <- gsub('<input type="button" value="Заказать" onClick="writeinvArray()" />',
'</p>',f)
f
f <- gsub('<input type=\"button\" value=\"Заказать\" onClick=\"writeinvArray()\" />',
'</p>',f)
f
f <- gsub('<input type=\"button\" value=\"Заказать\" onClick=\"writeinvArray()\" />',
'</p>',f,ignore.case = T)
f
f <- gsub('onClick=\"writeinvArray()\"',
'ХУЙ',f,ignore.case = T)
а
f
f <- gsub('writeinvArray',
'ХУЙ',f,ignore.case = T)
f
f <- readChar(webpage_path, file.info(webpage_path)$size)
f
f <- gsub('<input type="button" value="Заказать" onclick="writeinvArray()" />',
'</p>',f,ignore.case = T)
f
f <- gsub('onclick="writeinvArray()" />',
'> </p>',f,ignore.case = T)
f
f <- gsub('"writeinvArray()" />',
'ХУЙ',f,ignore.case = T)
а
f
f <- gsub('writeinvArray()" />',
'ХУЙ',f,ignore.case = T)
f
f <- gsub('<input type="button" value="Заказать" onClick="writeinvArray()" />',
'ХУЙ',f, fixed = T)
f
f <- readChar(webpage_path, file.info(webpage_path)$size)
f <- gsub('<input type="button" value="Заказать" onClick="writeinvArray()" />',
'</p>',f, fixed = T)
f
#cat(f, file=webpage_path)
nodes <- read_html(f, options = "HUGE") %>%
html_nodes(css = '.a a') %>%
.[html_attr(., "style") == "text-align:justify;text-indent:.66cm"]
nodes <- read_html(f, options = "HUGE")
str(nodes)
xml_structure(nodes)
nodes <- read_html(f, options = "HUGE") %>%
html_nodes(css = '.a a')
nodes
nodes[1]
as.character(nodes[1])
nodes <- read_html(f, options = "HUGE") %>%
html_nodes(css = '.a') %>%
.[html_attr(., "style") == "text-align:justify;text-indent:.66cm"]
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"./text()"))[1])
strings <- map_chr(nodes, ~ trimws(xml_text(xml_find_all(.x,"./text()")))[2])
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"./text()")))
doc_numbers <- map_chr(nodes, ~ xml_text(.x))
doc_numbers
nodes[1]
xml_structure(nodes[1])
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"./p/text()"))[1])
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"./p/a/text()"))[1])
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"p/a/text()"))[1])
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"*/p/a/text()"))[1])
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"*/p/a/text()"))[1])
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"*/a/text()"))[1])
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"p*/a/text()"))[1])
xml_text(xml_find_all(nodes[1], "/text()"))
xml_text(xml_find_all(nodes[1], "*/text()"))
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"*/text()"))[1])
strings <- map_chr(nodes, ~ trimws(xml_text(xml_find_all(.x,"./text()")))[2])
strings <- map_chr(nodes, ~ trimws(xml_text(xml_find_all(.x,"*/text()")))[2])
webpages <- list.files("website_pages/",full.names = T)
webpages[60]
webpages[49]
#webpage_path <- "AL0901_l.HTM"
webpage_path <- webpages[49]
extract_data <- function(webpage_path) {
webpage <- basename(webpage_path)
doc_year <- paste0(20, substr(webpage,3,4))
nodes <- read_html(webpage_path, options = "HUGE") %>%
custom_html_nodes(.,doc_year) %>%
.[html_attr(., "style") == "text-align:justify;text-indent:.66cm"]
authors <- nodes %>% html_node("b") %>% html_text()
if (doc_year == 2009) {
f <- readChar(webpage_path, file.info(webpage_path)$size)
f <- gsub('<input type="button" value="Заказать" onClick="writeinvArray()" />',
'</p>',f, fixed = T)
nodes <- read_html(f, options = "HUGE") %>%
html_nodes(css = '.a') %>%
.[html_attr(., "style") == "text-align:justify;text-indent:.66cm"]
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"*/text()"))[1])
strings <- map_chr(nodes, ~ trimws(xml_text(xml_find_all(.x,"*/text()")))[2])
}
else {
doc_numbers <- map_chr(nodes, ~ xml_text(xml_find_all(.x,"./text()"))[1])
strings <- map_chr(nodes, ~ trimws(xml_text(xml_find_all(.x,"./text()")))[2])
}
df <- data.frame(year = doc_year,
volume = substr(webpage,5,6),
number = doc_numbers,
author = authors,
text = strings,
stringsAsFactors = F)
print(webpage)
return(df)
}
custom_html_nodes <- function(data, year) {
if (year > 2013) {
return(html_nodes(data,
xpath = '//*[contains(concat( " ", @class, " " ), concat( " ", "1", " " ))]'))
}
else if (year > 2009) {
return(html_nodes(data,
xpath = '//a//*[contains(concat( " ", @class, " " ), concat( " ", "1", " " ))]'))
}
#else if (year == 2009) {
#  return(html_nodes(data, css = ".a a"))}
else{
return(html_nodes(data,
css = '.a'))
}
}
temp <- extract_data(webpage_path)
View(temp)
